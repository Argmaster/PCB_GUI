# -*- encoding: utf-8 -*-
# dummy file for VS code type hinting
from __future__ import annotations
from types import *
from typing import *
from _typeshed import *
from bmesh_type_ import *

class module:
    def __class__(*args, **kwargs) -> Any: ...
    def __delattr__(self, name, /): ...
    __dict__: mappingproxy
    def __dir__(*args, **kwargs) -> Any: ...
    __doc__: str
    def __eq__(self, value, /): ...
    def __format__(self, format_spec, /): ...
    def __ge__(self, value, /): ...
    def __getattribute__(self, name, /): ...
    def __gt__(self, value, /): ...
    def __hash__(self, /): ...
    def __init__(self, /, *args, **kwargs): ...
    def __init_subclass__(self, /, *args, **kwargs): ...
    def __le__(self, value, /): ...
    def __lt__(self, value, /): ...
    def __ne__(self, value, /): ...
    def __new__(self, value, /): ...
    def __reduce__(self, /): ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self, /): ...
    def __setattr__(self, name, value, /): ...
    def __sizeof__(self, /): ...
    def __str__(self, /): ...
    def __subclasshook__(self, /): ...



class member_descriptor:
    def __class__(*args, **kwargs) -> Any: ...
    def __delattr__(self, name, /): ...
    def __delete__(self, instance, /): ...
    def __dir__(self, /): ...
    __doc__: GetSetDescriptorType
    def __eq__(self, value, /): ...
    def __format__(self, format_spec, /): ...
    def __ge__(self, value, /): ...
    def __get__(self, instance, owner, /): ...
    def __getattribute__(self, name, /): ...
    def __gt__(self, value, /): ...
    def __hash__(self, /): ...
    def __init__(self, /, *args, **kwargs): ...
    def __init_subclass__(self, /, *args, **kwargs): ...
    def __le__(self, value, /): ...
    def __lt__(self, value, /): ...
    __name__: str
    def __ne__(self, value, /): ...
    def __new__(self, value, /): ...
    __objclass__: member_descriptor
    __qualname__: str
    def __reduce__(*args, **kwargs) -> Any: ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self, /): ...
    def __set__(self, instance, value, /): ...
    def __setattr__(self, name, value, /): ...
    def __sizeof__(self, /): ...
    def __str__(self, /): ...
    def __subclasshook__(self, /): ...



class property:
    def __class__(*args, **kwargs) -> Any: ...
    def __delattr__(self, name, /): ...
    def __delete__(self, instance, /): ...
    def __dir__(self, /): ...
    __doc__: str
    def __eq__(self, value, /): ...
    def __format__(self, format_spec, /): ...
    def __ge__(self, value, /): ...
    def __get__(self, instance, owner, /): ...
    def __getattribute__(self, name, /): ...
    def __gt__(self, value, /): ...
    def __hash__(self, /): ...
    def __init__(self, /, *args, **kwargs): ...
    def __init_subclass__(self, /, *args, **kwargs): ...
    __isabstractmethod__: GetSetDescriptorType
    def __le__(self, value, /): ...
    def __lt__(self, value, /): ...
    def __ne__(self, value, /): ...
    def __new__(self, value, /): ...
    def __reduce__(self, /): ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self, /): ...
    def __set__(self, instance, value, /): ...
    def __setattr__(self, name, value, /): ...
    def __sizeof__(self, /): ...
    def __str__(self, /): ...
    def __subclasshook__(self, /): ...
    def deleter(*args, **kwargs) -> Any: ...
    fdel: member_descriptor
    fget: member_descriptor
    fset: member_descriptor
    def getter(*args, **kwargs) -> Any: ...
    def setter(*args, **kwargs) -> Any: ...



class mappingproxy:
    def __class__(*args, **kwargs) -> Any: ...
    def __contains__(self, key, /): ...
    def __delattr__(self, name, /): ...
    def __dir__(self, /): ...
    __doc__: None
    def __eq__(self, value, /): ...
    def __format__(self, format_spec, /): ...
    def __ge__(self, value, /): ...
    def __getattribute__(self, name, /): ...
    def __getitem__(self, key, /): ...
    def __gt__(self, value, /): ...
    __hash__: None
    def __init__(self, /, *args, **kwargs): ...
    def __init_subclass__(self, /, *args, **kwargs): ...
    def __iter__(self, /): ...
    def __le__(self, value, /): ...
    def __len__(self, /): ...
    def __lt__(self, value, /): ...
    def __ne__(self, value, /): ...
    def __new__(self, value, /): ...
    def __reduce__(self, /): ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self, /): ...
    def __setattr__(self, name, value, /): ...
    def __sizeof__(self, /): ...
    def __str__(self, /): ...
    def __subclasshook__(self, /): ...
    def copy(*args, **kwargs) -> Any: ...
    def get(*args, **kwargs) -> Any: ...
    def items(*args, **kwargs) -> Any: ...
    def keys(*args, **kwargs) -> Any: ...
    def values(*args, **kwargs) -> Any: ...



class ModuleSpec:
    def __class__(*args, **kwargs) -> Any: ...
    def __delattr__(self, name, /): ...
    __dict__: mappingproxy
    def __dir__(self, /): ...
    __doc__: str
    def __eq__(self, other): ...
    def __format__(self, format_spec, /): ...
    def __ge__(self, value, /): ...
    def __getattribute__(self, name, /): ...
    def __gt__(self, value, /): ...
    __hash__: None
    def __init__(self, name, loader, *, origin=None, loader_state=None, is_package=None): ...
    def __init_subclass__(self, name, loader, *, origin=None, loader_state=None, is_package=None): ...
    def __le__(self, value, /): ...
    def __lt__(self, value, /): ...
    __module__: str
    def __ne__(self, value, /): ...
    def __new__(self, value, /): ...
    def __reduce__(self, /): ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self): ...
    def __setattr__(self, name, value, /): ...
    def __sizeof__(self, /): ...
    def __str__(self, /): ...
    def __subclasshook__(self, /): ...
    __weakref__: GetSetDescriptorType
    cached: property
    has_location: property
    parent: property



__doc__: str
def __loader__(): ...
__name__: str
__package__: str
__spec__: ModuleSpec
def from_edit_mesh() -> BMesh: ...
geometry: module
def new() -> BMesh: ...
ops: module
types: module
def update_edit_mesh() -> BMesh: ...
utils: module
